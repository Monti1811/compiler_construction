; ModuleID = 'tests/compiler/exprs/pointer_arithmetics.c4'
source_filename = "tests/compiler/exprs/pointer_arithmetics.c4"

@0 = private unnamed_addr constant [12 x i8] c"hello world\00", align 1

define i32 @main() {
entry:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca ptr, align 8
  store ptr @0, ptr %2, align 8
  store i32 0, ptr %1, align 4
  store i32 0, ptr %0, align 4
  br label %while-header

while-header:                                     ; preds = %if-end, %entry
  %3 = load ptr, ptr %2, align 8
  %4 = load i8, ptr %3, align 1
  %5 = sext i8 %4 to i32
  %6 = icmp ne i32 %5, 119
  br i1 %6, label %while-body, label %while-end

while-body:                                       ; preds = %while-header
  br label %if-header

while-end:                                        ; preds = %while-header
  %7 = load ptr, ptr %2, align 8
  %8 = load i32, ptr %0, align 4
  %9 = mul i32 -1, %8
  %10 = getelementptr inbounds i8, ptr %7, i32 %9
  store ptr %10, ptr %2, align 8
  %11 = load ptr, ptr %2, align 8
  %12 = load i8, ptr %11, align 1
  %13 = sext i8 %12 to i32
  ret i32 %13

if-header:                                        ; preds = %while-body
  %14 = load i32, ptr %1, align 4
  %if-condition = icmp eq i32 %14, 0
  br i1 %if-condition, label %if-consequence, label %if-alternative

if-consequence:                                   ; preds = %if-header
  %15 = load ptr, ptr %2, align 8
  %16 = getelementptr inbounds i8, ptr %15, i32 1
  store ptr %16, ptr %2, align 8
  store i32 1, ptr %1, align 4
  br label %if-end

if-alternative:                                   ; preds = %if-header
  %17 = load ptr, ptr %2, align 8
  %18 = getelementptr inbounds i8, ptr %17, i32 1
  store ptr %18, ptr %2, align 8
  store i32 0, ptr %1, align 4
  br label %if-end

if-end:                                           ; preds = %if-alternative, %if-consequence
  %19 = load i32, ptr %0, align 4
  %20 = add i32 %19, 1
  store i32 %20, ptr %0, align 4
  br label %while-header

DEAD_BLOCK:                                       ; No predecessors!
  ret i32 0
}
