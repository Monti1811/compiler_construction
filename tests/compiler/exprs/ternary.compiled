; ModuleID = 'tests/compiler/exprs/ternary.c4'
source_filename = "tests/compiler/exprs/ternary.c4"

define i32 @f(i32 %x, i32 %y, i32 %z) {
entry:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %x, ptr %3, align 4
  store i32 %y, ptr %2, align 4
  store i32 %z, ptr %0, align 4
  %4 = load i32, ptr %3, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %ternary-lhs, label %ternary-rhs

ternary-lhs:                                      ; preds = %entry
  br label %ternary-end

ternary-rhs:                                      ; preds = %entry
  %6 = load i32, ptr %2, align 4
  %7 = load i32, ptr %0, align 4
  %8 = add i32 %6, %7
  %9 = mul i32 2, %8
  br label %ternary-end

ternary-end:                                      ; preds = %ternary-rhs, %ternary-lhs
  %10 = phi i32 [ 5, %ternary-lhs ], [ %9, %ternary-rhs ]
  store i32 %10, ptr %1, align 4
  %11 = load i32, ptr %1, align 4
  ret i32 %11

dead-after-return:                                ; No predecessors!
  ret i32 0
}

define i32 @main() {
entry:
  %0 = call i32 @f(i32 1, i32 2, i32 3)
  ret i32 %0

dead-after-return:                                ; No predecessors!
  ret i32 0
}
