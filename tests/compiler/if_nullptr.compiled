; ModuleID = 'tests/compiler/if_nullptr.c4'
source_filename = "tests/compiler/if_nullptr.c4"

define i32 @main(...) {
entry:
  %0 = alloca ptr, align 8
  %1 = alloca ptr, align 8
  %2 = alloca i32, align 4
  store i32 0, ptr %2, align 4
  store ptr null, ptr %1, align 8
  store ptr %2, ptr %0, align 8
  br label %if-header

if-header:                                        ; preds = %entry
  %3 = load ptr, ptr %1, align 8
  %4 = ptrtoint ptr %3 to i32
  %if-condition = icmp ne i32 0, %4
  br i1 %if-condition, label %if-consequence, label %if-alternative

if-consequence:                                   ; preds = %if-header
  %5 = load i32, ptr %2, align 4
  %6 = add i32 %5, 1
  store i32 %6, ptr %2, align 4
  br label %if-end

if-alternative:                                   ; preds = %if-header
  %7 = load i32, ptr %2, align 4
  %8 = add i32 %7, 2
  store i32 %8, ptr %2, align 4
  br label %if-end

if-end:                                           ; preds = %if-alternative, %if-consequence
  br label %if-header1

if-header1:                                       ; preds = %if-end
  %9 = load ptr, ptr %1, align 8
  %10 = ptrtoint ptr %9 to i32
  %11 = icmp ne i32 0, %10
  br i1 %11, label %or-end, label %or-consequence

or-consequence:                                   ; preds = %if-header1
  %12 = load ptr, ptr %0, align 8
  %13 = ptrtoint ptr %12 to i32
  %14 = icmp ne i32 0, %13
  br label %or-end

or-end:                                           ; preds = %or-consequence, %if-header1
  %15 = phi i1 [ %11, %if-header1 ], [ %14, %or-consequence ]
  %16 = zext i1 %15 to i32
  %if-condition2 = icmp ne i32 %16, 0
  br i1 %if-condition2, label %if-consequence3, label %if-alternative4

if-consequence3:                                  ; preds = %or-end
  %17 = load i32, ptr %2, align 4
  %18 = add i32 %17, 8
  store i32 %18, ptr %2, align 4
  br label %if-end5

if-alternative4:                                  ; preds = %or-end
  %19 = load i32, ptr %2, align 4
  %20 = add i32 %19, 4
  store i32 %20, ptr %2, align 4
  br label %if-end5

if-end5:                                          ; preds = %if-alternative4, %if-consequence3
  br label %if-header6

if-header6:                                       ; preds = %if-end5
  %21 = load ptr, ptr %1, align 8
  %22 = ptrtoint ptr %21 to i32
  %23 = icmp ne i32 0, %22
  br i1 %23, label %and-consequence, label %and-end

and-consequence:                                  ; preds = %if-header6
  %24 = load ptr, ptr %0, align 8
  %25 = ptrtoint ptr %24 to i32
  %26 = icmp ne i32 0, %25
  br label %and-end

and-end:                                          ; preds = %and-consequence, %if-header6
  %27 = phi i1 [ %23, %if-header6 ], [ %26, %and-consequence ]
  %28 = zext i1 %27 to i32
  %if-condition7 = icmp ne i32 %28, 0
  br i1 %if-condition7, label %if-consequence8, label %if-alternative9

if-consequence8:                                  ; preds = %and-end
  %29 = load i32, ptr %2, align 4
  %30 = add i32 %29, 16
  store i32 %30, ptr %2, align 4
  br label %if-end10

if-alternative9:                                  ; preds = %and-end
  %31 = load i32, ptr %2, align 4
  %32 = add i32 %31, 32
  store i32 %32, ptr %2, align 4
  br label %if-end10

if-end10:                                         ; preds = %if-alternative9, %if-consequence8
  %33 = load i32, ptr %2, align 4
  ret i32 %33

DEAD_BLOCK:                                       ; No predecessors!
  ret i32 0
}
