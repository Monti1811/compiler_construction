; ModuleID = 'tests/compiler/struct/fields.c4'
source_filename = "tests/compiler/struct/fields.c4"

%struct.S = type { i32, i32, i32, ptr }

@GS = common global %struct.S zeroinitializer

define i32 @main() {
entry:
  %0 = alloca i32, align 4
  %1 = alloca ptr, align 8
  %2 = alloca %struct.S, align 8
  %3 = alloca %struct.S, align 8
  store ptr %2, ptr %1, align 8
  %4 = getelementptr inbounds %struct.S, ptr %3, i32 0, i32 2
  store i32 4, ptr %4, align 4
  %5 = load ptr, ptr %1, align 8
  %6 = getelementptr inbounds %struct.S, ptr %5, i32 0, i32 1
  store i32 3, ptr %6, align 4
  store i32 3, ptr @GS, align 4
  %7 = getelementptr inbounds %struct.S, ptr %3, i32 0, i32 3
  %8 = load ptr, ptr %1, align 8
  store ptr %8, ptr %7, align 8
  %9 = getelementptr inbounds %struct.S, ptr %3, i32 0, i32 3
  %10 = load ptr, ptr %9, align 8
  %11 = getelementptr inbounds %struct.S, ptr %10, i32 0, i32 2
  store i32 3, ptr %11, align 4
  %12 = load i32, ptr @GS, align 4
  %13 = load ptr, ptr %1, align 8
  %14 = getelementptr inbounds %struct.S, ptr %13, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = add i32 %12, %15
  %17 = getelementptr inbounds %struct.S, ptr %3, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %16, %18
  %20 = getelementptr inbounds %struct.S, ptr %3, i32 0, i32 3
  %21 = load ptr, ptr %20, align 8
  %22 = getelementptr inbounds %struct.S, ptr %21, i32 0, i32 2
  %23 = load i32, ptr %22, align 4
  %24 = add i32 %19, %23
  store i32 %24, ptr %0, align 4
  %25 = load i32, ptr %0, align 4
  ret i32 %25

DEAD_BLOCK:                                       ; No predecessors!
  ret i32 0
}