; ModuleID = 'tests/compiler/struct/recursive_access.c4'
source_filename = "tests/compiler/struct/recursive_access.c4"

%struct.S = type { ptr, i32 }

define i32 @main() {
entry:
  %0 = alloca %struct.S, align 8
  %1 = alloca %struct.S, align 8
  %2 = getelementptr inbounds %struct.S, ptr %1, i32 0, i32 1
  store i32 40, ptr %2, align 4
  %3 = getelementptr inbounds %struct.S, ptr %1, i32 0, i32 0
  store ptr %0, ptr %3, align 8
  %4 = getelementptr inbounds %struct.S, ptr %0, i32 0, i32 1
  store i32 2, ptr %4, align 4
  %5 = getelementptr inbounds %struct.S, ptr %1, i32 0, i32 1
  %6 = load i32, ptr %5, align 4
  %7 = getelementptr inbounds %struct.S, ptr %1, i32 0, i32 0
  %8 = load ptr, ptr %7, align 8
  %9 = getelementptr inbounds %struct.S, ptr %8, i32 0, i32 1
  %10 = load i32, ptr %9, align 4
  %11 = add i32 %6, %10
  ret i32 %11

dead-after-return:                                ; No predecessors!
  ret i32 0
}
