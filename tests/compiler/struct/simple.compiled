; ModuleID = 'tests/compiler/struct/simple.c4'
source_filename = "tests/compiler/struct/simple.c4"

%struct.S = type { i32, i32, i32 }

define i32 @main() {
entry:
  %0 = alloca ptr, align 8
  %1 = alloca %struct.S, align 8
  %2 = alloca %struct.S, align 8
  %3 = getelementptr inbounds %struct.S, ptr %2, i32 0, i32 0
  store i32 1, ptr %3, align 4
  %4 = getelementptr inbounds %struct.S, ptr %2, i32 0, i32 1
  store i32 2, ptr %4, align 4
  %5 = getelementptr inbounds %struct.S, ptr %2, i32 0, i32 2
  store i32 3, ptr %5, align 4
  store ptr %1, ptr %0, align 8
  %6 = load ptr, ptr %0, align 8
  %7 = getelementptr inbounds %struct.S, ptr %6, i32 0, i32 0
  store i32 10, ptr %7, align 4
  %8 = load ptr, ptr %0, align 8
  %9 = getelementptr inbounds %struct.S, ptr %8, i32 0, i32 1
  store i32 20, ptr %9, align 4
  %10 = load ptr, ptr %0, align 8
  %11 = getelementptr inbounds %struct.S, ptr %10, i32 0, i32 2
  store i32 30, ptr %11, align 4
  %12 = getelementptr inbounds %struct.S, ptr %2, i32 0, i32 0
  %13 = load i32, ptr %12, align 4
  %14 = getelementptr inbounds %struct.S, ptr %2, i32 0, i32 1
  %15 = load i32, ptr %14, align 4
  %16 = add i32 %13, %15
  %17 = getelementptr inbounds %struct.S, ptr %2, i32 0, i32 2
  %18 = load i32, ptr %17, align 4
  %19 = add i32 %16, %18
  %20 = load ptr, ptr %0, align 8
  %21 = getelementptr inbounds %struct.S, ptr %20, i32 0, i32 0
  %22 = load i32, ptr %21, align 4
  %23 = add i32 %19, %22
  %24 = load ptr, ptr %0, align 8
  %25 = getelementptr inbounds %struct.S, ptr %24, i32 0, i32 1
  %26 = load i32, ptr %25, align 4
  %27 = add i32 %23, %26
  %28 = load ptr, ptr %0, align 8
  %29 = getelementptr inbounds %struct.S, ptr %28, i32 0, i32 2
  %30 = load i32, ptr %29, align 4
  %31 = add i32 %27, %30
  ret i32 %31

dead-after-return:                                ; No predecessors!
  ret i32 0
}
